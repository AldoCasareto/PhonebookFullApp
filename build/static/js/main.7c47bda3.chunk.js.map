{"version":3,"sources":["components/Filter.js","components/Form.js","components/Notifications.js","components/Persons.js","services/phonebook.js","App.jsx","index.js"],"names":["Filter","filter","handleFilter","type","onChange","value","Form","addNewPerson","newName","handleNumberChange","newNumber","handleNameChange","onSubmit","Notifications","notification","console","log","status","className","message","Persons","persons","filterName","handleDelete","map","person","name","number","onClick","id","baseUrl","axios","get","then","res","data","newPerson","post","delete","newObject","put","response","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","phoneService","initialNotes","toLowerCase","includes","e","target","preventDefault","newContact","findMatch","find","undefined","returnedContact","concat","setTimeout","window","confirm","updateNumber","returnedPerson","contact","catch","err","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7c47bda3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ filter, handleFilter}) => {\n  return (\n    <div>\n      Filter\n      <input type='text' onChange={handleFilter} value={filter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\n\nconst Form = (\n{  addNewPerson,\n  newName,\n  handleNumberChange,\n  newNumber,\n  handleNameChange}\n) => {\n  return (\n    <div>\n      <form onSubmit={addNewPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type='submit'>add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nconst Notifications = ({ notification }) => {\n  if (notification === null) return null;\n  console.log(notification.status);\n  return <div className={`${notification.status} notification`}>{notification.message}</div>;\n};\n\nexport default Notifications;\n","import React from 'react';\n\nconst Persons = ({ persons, filterName, handleFilter, handleDelete }) => {\n  return (\n    <>\n      {(handleFilter === '' ? persons : filterName).map((person) => (\n        <p key={person.name}>\n          {person.name} - {person.number}\n          <button onClick={()=>handleDelete(person.id, person.name)}>Delete</button>\n        </p>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((res) => res.data);\n};\n\nconst deleteContact = (id) => {\n  console.log(`${baseUrl}/${id}`);\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, deleteContact, update };\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport Form from './components/Form';\nimport Notifications from './components/Notifications';\nimport Persons from './components/Persons';\nimport phoneService from './services/phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n\n  // useEffect(() => {\n  //   axios.get('http://localhost:3001/persons').then((res) => {\n  //     const fetchedPeople = res.data;\n  //     setPersons(fetchedPeople);\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    phoneService.getAll().then((initialNotes) => setPersons(initialNotes));\n  }, []);\n\n  const filterName = persons.filter((person) =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const addNewPerson = (e) => {\n    e.preventDefault();\n    const newContact = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const findMatch = persons.find((person) => person.name === newName);\n    if (findMatch === undefined) {\n      phoneService.create(newContact).then((returnedContact) => {\n        setPersons(persons.concat(returnedContact));\n        setNotification({\n          message: `Added ${newName}`,\n          status: 'success',\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n      });\n      // axios.post('http://localhost:3001/persons', newContact).then((res) => {\n      //   setPersons(persons.concat(res.data));\n      //   setNewName('');\n      //   setNewNumber('');\n      // });\n    } else {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const updateNumber = { ...findMatch, number: newNumber };\n        phoneService\n          .update(findMatch.id, updateNumber)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== findMatch.id ? person : returnedPerson\n              )\n            );\n          });\n        setNotification({\n          message: `Updated number for ${newName}`,\n          status: 'success',\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 3000);\n        console.log(findMatch.id);\n        console.log(updateNumber);\n      }\n      // setNewNumber('');\n    }\n  };\n\n  const handleDelete = (id, name) => {\n    console.log(id);\n    const contact = persons.filter((person) => person.id !== id);\n    if (window.confirm(`Delete ${name}?`)) {\n      phoneService\n        .deleteContact(id)\n        .then(setPersons(contact))\n        .catch((err) => {\n          setNotification({\n            message: `Information for ${name} has already been removed from the server`,\n            status: 'error',\n          });\n          setTimeout(() => {\n            setNotification(null);\n          }, 3000);\n        });\n      setNotification({\n        message: `Deleted ${name}`,\n        status: 'success',\n      });\n      setTimeout(() => {\n        setNotification(null);\n      }, 3000);\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notifications notification={notification} />\n      <Filter filter={filter} handleFilter={handleFilter} />\n      <Form\n        addNewPerson={addNewPerson}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n      />\n      <h2>Numbers</h2>\n      <div>\n        <Persons\n          persons={persons}\n          filterName={filterName}\n          handleFilter={handleFilter}\n          handleDelete={handleDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />, document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}